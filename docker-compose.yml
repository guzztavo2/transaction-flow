services:
  app:
    build: .
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - vendor:/var/www/vendor
    command: ["supervisord", "-c", "/var/www/docker/supervisord.conf"]
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - QUEUE_CONNECTION=database
      - XDEBUG_CONFIG=client_host=host.docker.internal client_port=9003 start_with_request=yes
      - XDEBUG_MODE=debug
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_SCHEME=${MAIL_SCHEME}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME} 
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - TZ=${APP_TIMEZONE}

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: project_01
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      retries: 30
      timeout: 5s
      start_period: 30s

  redis:
    image: redis:latest
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 10
      timeout: 5s
      start_period: 5s

  queue:
    build: .
    container_name: laravel_queue
    working_dir: /var/www
    depends_on:
      - app
    entrypoint: [ "sh", "/var/www/docker/worker.sh" ]

  supervisor:
    build: .
    container_name: laravel_supervisor
    working_dir: /var/www
    depends_on:
      - app
    volumes:
      - .:/var/www
      - vendor:/var/www/vendor
    command: ["supervisord", "-c", "/var/www/docker/supervisord.conf"]

volumes:
  mysql_data:
  vendor:
